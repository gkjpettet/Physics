#tag Interface
Protected Interface Shape
	#tag Method, Flags = &h0, Description = 4765747320746865206E756D626572206F66206368696C64207072696D6974697665732E
		Function ChildCount() As Integer
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0
		Function Clone() As Physics.Shape
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 476976656E2061207472616E73666F726D2C20636F6D7075746520746865206173736F636961746564206178697320616C69676E656420626F756E64696E6720626F7820666F722061206368696C642073686170652E
		Sub ComputeAABB(aabb As Physics.AABB, xf As Physics.Transform, childIndex As Integer)
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 436F6D707574652064697374616E63652066726F6D207468652063757272656E7420736861706520746F20706F696E74206070602028696E20776F726C6420636F6F7264696E61746573292E2052657475726E73207468652064697374616E63652066726F6D207468652063757272656E742073686170652E20606E6F726D616C4F7574602072657475726E732074686520646972656374696F6E20696E207768696368207468652064697374616E636520696E637265617365732E20607866602069732074686520736861706520776F726C64207472616E73666F726D2E
		Function ComputeDistanceToOut(xf As Physics.Transform, p As VMaths.Vector2, childIndex As Integer, ByRef normalOut As VMaths.Vector2) As Double
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 436F6D7075746520746865206D6173732070726F70657274696573206F662074686973207368617065207573696E67206974732064696D656E73696F6E7320616E642064656E736974792E2054686520696E65727469612074656E736F7220697320636F6D70757465642061626F757420746865206C6F63616C206F726967696E2E206064656E73697479602073686F756C6420626520696E206B696C6F6772616D7320706572206D6574726520737175617265642E
		Sub ComputeMass(massData As Physics.MassData, density As Double)
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub Constructor(type As Physics.ShapeType)
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 546869732073686170652773207261646975732E
		Function Radius() As Double
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 546869732073686170652773207261646975732E
		Sub Radius(Assigns r As Double)
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 4361737420612072617920616761696E73742061206368696C6420736861706520616E642072657475726E73207472756520696620746865206368696C64207368617065206973206869742E20607472616E73666F726D6020746F206265206170706C69656420746F207468652073686170652E20606368696C64496E6465786020697320746865206368696C6420736861706520696E6465782E
		Function Raycast(output As Physics.RaycastOutput, input As Physics.RaycastInput, transform As Physics.Transform, childIndex As Integer) As Boolean
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 54686973207368617065277320747970652E
		Function ShapeType() As Physics.ShapeType
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 54657374206120706F696E7420666F7220636F6E7461696E6D656E7420696E20746869732073686170652E2054686973206F6E6C7920776F726B7320666F7220636F6E766578207368617065732E20607866602073686F756C642062652074686520736861706520776F726C64207472616E73666F726D2E20616E642060706F696E74602073686F756C6420626520696E20776F726C6420636F6F7264696E617465732E
		Function TestPoint(xf As Physics.Transform, point As VMaths.Vector2) As Boolean
		  
		End Function
	#tag EndMethod


	#tag Note, Name = About
		A shape is used for collision detection. You can create a shape however you
		like. Shapes used for simulation in a `World` are created automatically when a
		`Fixture` is created. Shapes may encapsulate a one or more child shapes.
		
		
	#tag EndNote


End Interface
#tag EndInterface
